kind: pipeline
name: "Push"

concurrency:
  limit: 2

steps:
  - name: "Test & Build"
    image: node:10.11
    commands:
      - yarn
      - yarn build
      - yarn test

  - name: "Stage with mock server"
    image: alpine/git
    environment:
      PRIVATE_KEY:
        from_secret: mock_deploy_key_b64
    commands:
      - echo "$PRIVATE_KEY" | base64 -d > id_rsa
      - chmod 0600 id_rsa
      - cd build/
      - echo "window.env={authUrl:'http://api-v2.mock.openware.work/api/v2/barong',tablePageLimit:50,msAlertDisplayTime:'5000'};" > env.js
      - cat env.js
      - cd /drone/src/
      - cat build/env.js
      - cd build
      - mkdir tower
      - mv static tower && mv env.js tower && mv commons.js* tower
      - cd ..
      - scp -r -i id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build mock@mock.openware.work:/home/mock/builds/${DRONE_COMMIT_SHA:0:7}
      - echo "http://${DRONE_COMMIT_SHA:0:7}.mock.openware.work/tower"

  - name: "Notify staging"
    image: plugins/slack
    settings:
      webhook:
        from_secret: baseapp_slack_webhook
      channel:
        from_secret: baseapp_slack_channel
      template: >
        {{#success build.status}}
          [SUCCESS] (Base Application) Branch {{ build.branch }} by {{ build.author }} staging has succeeded!
          Visit http://{{ truncate build.commit 7 }}.mock.openware.work to check it out!
        {{else}}
          [FAILURE] Branch {{ build.branch }} by {{ build.author }} staging has failed!
        {{/success}}
        Check the build info here: {{ build.link }}
    when:
      status: [success, failure]

trigger:
  event:
  - push
  branch:
    exclude:
    - master
    - obfuscated-*
